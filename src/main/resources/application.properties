spring.thymeleaf.cache=false

server.port=8080
# server.servlet.context-path= # Context path of the application. ??????????????????????url???????
# server.servlet.context-path???????? / ???localhost:8080/xxxxxx?
# ?server.servlet.context-path??????? /demo?????????localhost:8080/demo/xxxxxx
server.servlet.context-path=/ft


# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# userSSL = fasle 不启用安全连接
spring.datasource.url=jdbc:mysql://localhost:3306/ftcommunity?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
# 连接池的种类和配置，HikariDataSource是springboot内置的最好的连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 连接池的最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 最小空闲连接
spring.datasource.hikari.minimum-idle=5
# 超时时间
spring.datasource.hikari.idle-timeout=30000 

# MybatisProperties
# mapper文件的存放位置，classpath对应了编译之后的target中的classes文件夹
mybatis.mapper-locations=classpath:mapper/*.xml
# 实体类，在配置文件中使用实体类就不用它的包名了
mybatis.type-aliases-package=com.zrulin.ftcommunity.pojo
# 启用自动生成组件，insert的时候那个id是自增长的，启用这个才能支持
mybatis.configuration.use-generated-keys=true
# 将表对应的下划线命名自动转换为驼峰式命名，user_id -> userId
mybatis.configuration.map-underscore-to-camel-case=true

# logger mybatis写代码的时候容易写错，尤其是xxxMapper.xml 中的sql语句，将dao这一层的日志级别调成比较低的debug,就会打印更多的信息
# 上线前用debug   上线后用error
logging.level.com.zrulin.ftcommunity=debug

#把控制台打印的日志信息存到文件里面  -- 在实际开发中日志的存储很重要，配置更复杂，比如说按照日志的level存储不同的文件，每隔多长时间更新日志信息。
#logging.file.path=d:/work/data/ft.log

# Mailproperties
# 声明访问的邮箱域名是什么
spring.mail.host=smtp.qq.com
# 端口，基本上所有的邮箱，它默认的发送邮件的端口都是465
spring.mail.port=465
#邮箱的账号密码
spring.mail.username=zlh36@qq.com
#njagzydnvaysdgdi
spring.mail.password=aznmgkutjvcwdedg
# 指定协议
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# 这个配置是我们自定义的内容
# community
# 配置服务器所在的域名，因为测试和上线所用的不一样，所以写在配置文件中。
community.path.domain=http://localhost:8080
# 用户头像存放的位置
community.path.upload=e:/ideaProjects1/FTCommunity/src/main/resources/static/image/userphoto
# 活动海报存放位置
community.path.upload.activity=e:/ideaProjects1/FTCommunity/src/main/resources/static/image/activity


# multipart
# 文件上传属性配置
# 单个文件上传最大大小
spring.servlet.multipart.max-file-size=10MB
# 整个上传的文静请求不超过100MB
spring.servlet.multipart.max-request-size=100MB

# redisProperties
# redis服务器地址
spring.redis.host=47.97.32.207
# redis 服务器连接端口
spring.redis.port=8888
# redis 数据库索引
spring.redis.password=dongshan
# Redis 数据库索引
spring.redis.database=11
# 连接超时时间
spring.redis.timeout=1800000
# 连接池最大连接数(使用负值表示没有限制)
spring.redis.lettuce.pool.max-active=20
# 最大阻塞等待时间(负数表示没有限制)
spring.redis.lettuce.pool.max-wait=-1
# 连接池中最大空闲连接
spring.redis.lettuce.pool.max-idle=5
# 连接池中最小空闲连接
spring.redis.lettuce.pool.min-idle=0


# KafkaProperties
# 配置的kafka服务器
spring.kafka.bootstrap-servers=47.97.32.207:9093
# 消费者的分组id
spring.kafka.consumer.group-id=ftcommunity-consumer-group
# 是否自动提交消费者的偏移量（读取消息是按照偏移量读取的，偏移量读完之后要不要记录下来）
spring.kafka.consumer.enable-auto-commit=true
# 自动提交的频率，多久自动提交一次单位（毫秒）
spring.kafka.consumer.auto-commit-interval=3000