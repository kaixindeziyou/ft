<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zrulin.ftcommunity.dao.MessageMapper">
    <sql id="selectMessage">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insertMessage">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <select id="selectConversations" resultType="Message">
        select <include refid="selectMessage"></include>
        from message
        where id in(
            select max(id) from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectConversationCounts" resultType="int">
        select count(m.maxid)
        from (
            select max(id) as maxid from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>
    <select id="selectLetters" resultType="Message">
        select <include refid="selectMessage"></include>
        from message
        where conversation_id = #{conversationId}
        and from_id != 1
        and status != 2
        order by id
        limit #{offset},#{limit}
    </select>
    <select id="selectLetterCounts" resultType="int">
        select count(id)
        from message
        where conversation_id = #{conversationId}
        and from_id != 1
        and status != 2
    </select>
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message (<include refid="insertMessage"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        update message set status = #{status}
        where id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectMessage"></include>
        from message
        where id in(
            select max(id)
            from message
            where from_id = 1
              and to_id = #{userId}
              and status != 2
              and conversation_id = #{topic}
        )
    </select>
    <select id="selectNoticeCount" resultType="int">
        select count(id)
        from message
        where from_id = 1
          and status != 2
          and to_id = #{userId}
          and conversation_id = #{topic}
    </select>
    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id)
        from message
        where from_id = 1
          and status = 0
          and to_id = #{userId}
          <if test="topic!=null">
              and conversation_id = #{topic}
          </if>
    </select>
    <select id="selectAllUnread" resultType="int">
        select count(id)
        from message
        where status = 0
          and to_id = #{userId}
    </select>
    <select id="selectNotice" resultType="Message">
        select <include refid="selectMessage"></include>
        from message
        where status != 2
            and from_id =1
            and to_id = #{userId}
            and conversation_id = #{topic}
            order by create_time desc
            limit #{offset},#{limit}
    </select>
</mapper>